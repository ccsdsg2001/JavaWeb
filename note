HTML 标签介绍:1.标签名大小写不敏感。2.标签分为1.基本属性：可以修改简单的样式结果 2.事件属性：可以直接设置事件响应后的代码
标签又分为单标签和双标签
常用标签介绍:
1.<font color显示颜色 face显示字体 size显示大小></font>

2.< 用&lt; >用 &gt; 表示   空格用&nbsp; 表示

3.标题标签:从<h1>到<h6>表示从大到小 align属性表示对齐属性 left左对齐 righe 右对齐 center 其中

4.超链接:在网页中可以点击的链接 <a>超链接
hred属性设置链接地址 target属性设置哪个目标进行跳转 self当前页面 blank新页面

5.列表标签 <ul>无序标签type属性可以修改列表项       <li>列表项 <ol>有序标签

6.img标签:可以在页面上显示图片<img>图片标签
src属性设置图片的路径 width属性设置图片的宽度 height属性设置图片的高度 border属性设置图片边框的大小 alt属性设置当前指定路径找不到图片时,用来替代的文本内容
 绝对路径:http://ip:port/工程名/资源路径 相对路径:.表示当前文件所在的目录 ..表示当前文件所在的上一级目录 文件名 表示当前文件所在目录的文件

7.表格标签:<table>是表格标签
border属性设置表格标签 width属性设置宽度 height属性设置长度 <b>标签是加粗标签 <tr>是行标签 <th>是表头标签 <td>是单元格标签
colsapn 属性设置跨列 rowspan 属性设置跨行

8.iframe标签:可以打开小窗口加载页面.<iframe>标签可以显示一个小页面.
和a标签组合组合使用:1.在iframe标签中使用name属性定义一个名称 2.在a标签的target属性上设置iframe的name的属性值 在<a>中定义target为iframe中的name

9.表单标签:<form>标签 表示一个表单 <input>标签
属性type  text是文本输入框 password为密码输入框 action属性设置提交得服务器地址 method属性设置提交的方式GET或POST  radio为单选框 reset为重置 submit为提交 file为文件上传 hidden为隐藏域(不需要用户参与,但依然发送给服务端) value为显示的文字 name属性可以对其分组 value默认值为一开始显示的内容 checked属性为checked表示默认选中
<Select>标签为下拉列表框 <option>标签为下拉列表框中的选项 selected属性为selected设置默认选中
<textarea>标签为多行文本输入框 rows属性设置显示几行的高度 cols属性设置每行可以显示几个字符宽度
表单提交的时候，数据没有发给服务端三种情况：1.表单没有name属性值 2单选复选（或下拉列表的option标签）都需要添加value属性 3.表单项不在提交的form标签中
GET请求特点：
1.浏览器地址栏中是action属性+请求参数 格式是：name=value&&name=value
2、不安全
3、他有数据长度的限制
POST请求的特点：
1、地址栏中只有action属性值
2.要安全
3.理论上没有数据长度的限制

10.<div>标签 默认独占一行 <span>标签 它的长度是封装数据的长度 <p>标签 默认会在段落上方或下方空出一行

CSS技术
CSS是层叠样式表单,是用于增强网页控制于页面分离的一种技术
语法规则: (选择器)p{
    (属性)font-size:80px(值)
}
选择器:决定受CSS样式影响的HTML元素 属性是你要改变的样式名,并且每个属性都有一个值.使用分号隔开
PS:每行建议只描述一个属性

CSS和HTML的结合方式
<style>标签专门用来定义css样式代码
第一种:在标签的style属性上设置"key:value value;",修改标签样式
第二种:在head标签中,使用style标签定义自己需要的css样式
格式如下:xxx{
    key:value value;
}
第三种:把css样式写成一个单独的css文件,通过link标签引入即可 <link>标签专门用来引入CSS代码

CSS选择器
标签名选择器
格式是:
标签名{
    属性:值;
}
标签名选择器,可以决定那些标签被动的使用这个样式

id选择器
格式是
#id属性值{
    属性:值;
}
id选择器,可以通过id属性选择性的去使用这个样式

class选择器
格式:
.class属性值{
    属性:值;
}
class类型选择性,可以通过class属性有效的选择性去使用这个样式

组合选择器
格式:
选择器1,选择器2,选择器n{
    属性:值
}

常用样式:

JAVAScript介绍
JS是弱类型，JAVA是强类型
弱类型是类型可变，强类型，就是定义变量的时候，类型以确定，而且不可变
特点：1.交互性2.安全性3.跨平台性
JavaScript和html代码的结合方式
第一种方式：只需要在head标签中，或者在body标签中，使用script标签来书写JavaScript代码
<script>标签 alert()是一个警告窗函数,它可以接受任意类型的参数,参数就是警告框的提示信息
第二种方式:使用<script>标签单独引入js src属性专门用来引入js文件路径

JS变量
变量类型:
数值类型:number
字符串类型:string
对象类型:object
布尔类型:Boolean
函数类型:function
特殊的值:undefined 未定义,所有js变量未赋值的时候都是undefined .null 空值 NAN 非数字,非数值

JS中定义的变量格式:
var 变量名;
var 变量名=值;
typeof()是js语言提供的一个函数,可以取变量的数据类型返回

关系运算:
等于:== 等于是简单的做字面值的比较
全等于:=== 除了做字面值的比较,还会比较两个量的数据类型

逻辑运算
且 && 或|| 取反!
在js中,所有的变量,都可以作为一个Boolean类型变量去使用.0,null,undefined,""空串都认为是false
&&且运算,两种情况:1.当表达式全为真的时候,返回最后一个表达式的值.2.当表达式中,有一个为假的时候,返回第一个为假的表达式的值
|| 或运算 两种情况:1.当表达式全为假时,返回最后一个表达式的值 2.只要有一个表达式为真,就返回第一个为真的表达式的值

数组
定义方式:
var 数组名=[];//空数组
var 数组名=[1,'cs',true]//定义数组同时辅助元素
js中的数组,只要我们通过数组下标赋值,那么最大的下标值,就会自动给数组做扩容操作

函数
两种定义方式
1.使用function关键字来定义函数,格式如下
function 函数名(形参列表){
    函数体
}
2.var 函数名 =function(形参列表){函数体}
在js中,定义返回值的函数直接表明return.js中函数不允许重载.会覆盖掉上一次定义
函数的arguments隐形参数(只在function内):在function中函数中不需要定义,可以直接用来获取所有参数的表量,如java中的可变长的参数public void fun(Object...args)
js中的隐形参数是一个数组,操作类型

js中的自定义对象
对象的定义:
var 变量名=new object() //对象实例 空对象
变量名.属性名=值;//定义一个属性
变量名.函数名=function(){}{}//定义一个函数
对象的访问:变量名.属性/函数名(){};
{}花括号形式的自定义对象:var 变量名={属性名:值//定义一个属性,分开  函数名:function(){} //定义一个函数};//空对象
对象的访问:变量名.属性/函数名();

js中的事件
事件是电脑输入设备和页面进行交互的相应
常用的事件:
onload 加载完成事件  页面加载完成之后,常用于做页面js代码初始化操作
onclick 单击事件    常用于按钮的点击相应事件
onblur 失去焦点事件   常用于输入框失去焦点后验证其输入内容是否合法
oncharge 内容发生改变事件 常用下拉框和输入框内容发生改变后操作
onsubmit 表单提交事件  常用于表单提交前,验证所有表单项是否合法

事件注册又分为静态注册和动态注册两种:
当事件相应后,要执行哪些操作代码,叫事件注册或事件绑定
静态注册事件:通过html标签的事件属性直接赋予事件相应后的代码,这种方式叫做静态注册
动态注册事件:先通过js代码得到标签的dom对象,再通过dom对象.事件名=function(){} 这种形式赋予事件响应后的代码,叫动态注册
动态注册基本步骤:1.获取标签对象 2.标签对象.事件名 =function(){}

onload事件
浏览器解析完页面后自动触发的事件
动态注册 window.onload =function(){};  //固定写法

onclick事件 点击
动态注册 window.onload =function(){}
1.获取标签对象 document.getElementById
2.通过标签对象.onclick =function(){}

onblur失去焦点事件
动态注册 window.onload =function(){
1.获取标签对象 var element =document.getElementById
2.通过标签对象.onblur =function(){}
}

oncharge 内容发生改变事件
动态注册 window.onload =function(){
1.获取标签对象 var element =document.getElementById
2.通过标签对象.onchange =function(){}
}

onsubmit事件
静态注册<form action="js.html" method="get" onsubmit="return onsubmtfun()"> return不能少
动态注册 window.onload =function(){
1.获取标签对象 var element =document.getElementById
2.通过标签对象.onsubmit =function(){
            return true/false;}//防止表单不合法
}

DOM模型
把文档中的标签，属性，文本，转换成为对象来管理
DOCUMENT对象
1.Document管理了所有的HTML文档内容
2.是一种树形状的结构
3.把所有标签对象化
4.通过document访问所有的标签对象

1.当要操作一个标签的时候,一定要获取这个标签对象
2.验证字符串符合规则,使用正则表达式技术
3.test()方法测试某个字符串. 匹配返回true 不匹配返回false


p57